spring.application.name=bikehubb

# Hibernate/JPA - Atualizar automaticamente para sync com as entidades
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configuração do banco de dados Supabase usando Transaction Pooler
# Transaction Pooler é IPv4 compatível e recomendado para aplicações
# Nova URL do Transaction Pooler do Supabase (IPv4 proxied)
spring.datasource.url=jdbc:postgresql://aws-0-sa-east-1.pooler.supabase.com:6543/postgres?user=postgres.krlhnihkslmmihprkwqm&sslmode=require&preparedStatementCacheQueries=0&rewriteBatchedInserts=true&connectTimeout=30&socketTimeout=60&tcpKeepAlive=true
spring.datasource.username=postgres.krlhnihkslmmihprkwqm
spring.datasource.password=Weboito8@Websete7@


# Driver JDBC
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configurações específicas para IPv6 e rede
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Pool de conexão otimizado para Transaction Pooler do Supabase
# Transaction Pooler já faz pooling, então mantemos um pool pequeno na aplicação
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.initialization-fail-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# Configurações adicionais recomendadas
# Permitir upload de arquivos
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=50MB

# Configuracoes do Stripe
stripe.secret.key=sk_test_4eC39HqLyjWDarjtT1zdp7dc
stripe.publishable.key=pk_test_TYooMQauy1zV0N0rQ8y5K5cQ
stripe.webhook.secret=whsec_test_4eC39HqLyjWDarjtT1zdp7dc

#Configuracao do servidor (opcional)
server.port=8080